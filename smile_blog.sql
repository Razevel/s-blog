-- phpMyAdmin SQL Dump
-- version 4.7.4
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Фев 26 2018 г., 07:42
-- Версия сервера: 5.7.19
-- Версия PHP: 5.6.31

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `smile_blog`
--

-- --------------------------------------------------------

--
-- Структура таблицы `articles`
--

DROP TABLE IF EXISTS `articles`;
CREATE TABLE IF NOT EXISTS `articles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `text` text NOT NULL,
  `image` varchar(50) DEFAULT NULL,
  `category_id` int(11) NOT NULL,
  `views` int(11) NOT NULL DEFAULT '0',
  `pub_date` date NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_category_id` (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `articles`
--

INSERT INTO `articles` (`id`, `title`, `text`, `image`, `category_id`, `views`, `pub_date`) VALUES
(1, 'Yii 2.0.14', '<p>\r\nКоманда Yii рада представить новую версию PHP фреймворка: Yii 2.0.14. В неё вошло более сотни улучшений и исправлений, включая исправления безопасности.\r\n</p>\r\n<p>\r\nВ релиз вошли несколько изменений, которые могут повлиять на уже работающие приложения. Эти изменения описаны в UPGRADE.md.\r\n</p>\r\n\r\n<p>\r\nСпасибо сообществу Yii за помощь в выпуске этого обновления!\r\n</p>\r\n\r\n<p>\r\nЗа процессом разработки можно следить, поставив звёздочку на GitHub. У нас есть много сообществ Yii, где вы можете попросить помощи или поделится своим опытом — мы и тысячи других пользователей Yii будем рады вашему участию.\r\n</p>\r\n\r\n<p>\r\nЭтот релиз знаменателен тем, что становится последним релизом в версии Yii 2.0, содержащим улучшения. Это значит, что мы сконцентрируем силы на разработке версии 2.1.x, в которую войдёт много новых улучшений, которые невозможно включить в ветку 2.0.х из-за ограничений по сохранению обратной совместимости. Несмотря на это, ветка 2.0.х будет получать исправления и улучшения безопасности. Сроки окончания поддержки 2.0.х будут объявлены вместе с релизом версии 2.1.\r\n</p>\r\n\r\n<p>\r\nУбедитесь что версия фреймворка в composer.json прописана верно (~2.0.14) и вы не обновитесь на 2.1 случайно, когда он релизнется.\r\n</p>\r\n<p>\r\nНиже мы рассмотрим самые интересные улучшения и исправления релиза. Полный список можно, как обычно, найти в CHANGELOG.\r\n</p>\r\n\r\nМасштабируемость и параллелизм\r\n\r\n<p>\r\nПроблемы масштабируемость и параллелизма часто отходят на второй план в начале разработки, но \"всплывают\" при росте бизнеса. В этом релизе мы нашли и исправили ошибку, которая касалась записи значений в базу данных и обновления ID сессии. При использовании master-slave репликации, yii\\web\\DbSession, yii\\validators\\UniqueValidator и yii\\validators\\ExistValidator могли обращаться к slave-серверу, в то время как корректнее было бы обращаться к master-серверу.\r\n</p>\r\n\r\n<p>\r\nУлучшения валидаторов\r\n</p>\r\n\r\n<p>В дополнение к сказанному выше, есть ещё несколько улучшений валидаторов.</p>\r\n\r\n<p>\r\nВо-первых, ExistValidator теперь может проверять существование связей, если установлено свойство targetRelation. Это значит, что теперь можно описать следующую конфигурацию правил валидации:\r\n</p>\r\n<p>\r\nВо-вторых FileValidator получил новое свойство minFiles указывающее минимальное количество файлов, которые должен загрузить пользователь.\r\n</p>\r\n\r\n<p>\r\nПоведения\r\n</p>\r\n\r\n<p>\r\nyii\\behaviors\\BlameableBehavior получил новое свойство defaultValue, которое используется в случае, когда ID пользователя не может быть определён. Такое обычно происходит, если модель ActiveRecord используется в консольном приложении.\r\n</p>\r\n\r\n<p>\r\nВ yii\\behaviors\\AttributeTypecastBehavior появилось новое свойство typecastAfterSave. Если его выставить в true значения атрибутов будут приводиться к указанным типам сразу после сохранения модели. Типы будут теми же, что и при загрузке модели из базы.\r\n</p>\r\n<p>\r\nБыло добавлено поведение yii\\behaviors\\CacheableWidgetBehavior. Оно автоматически кеширует контент виджета в соответствии с настройками зависимостей и времени валидности кеша.\r\n</p>\r\n\r\n\r\n<p>\r\nБазы данных и ActiveRecord\r\n</p>\r\n\r\n<p>\r\nЭтот релиз добавляет много новых вещей, связанных с базами данных и ActiveRecord. Эти улучшения были реализованы силами Дмитрия Науменко, Сергея Макинена, Роберта Корульчыка, Николая Олейникова и других участников сообщества.\r\n</p>\r\n\r\n<p>\r\nОбъектный формат описания условия и пользовательские типы данных\r\n</p>\r\n\r\n\r\n<p>\r\nБыла реализована поддержка пользовательских типов данных. Добавлена поддержка JSON для MySQL и PostgreSQL, а также массивов для PostgreSQL. Чтобы достигнуть этого, внутренняя реализация Query Builder-а была существенно переработана, что также позволило реализовать поддержку описания условий в объектном формате. Поддержка привычного формата описания условий осталась без изменений. Кроме того, форматы можно комбинировать:\r\n</p>\r\n\r\n<p>\r\nЭто улучшение даёт несколько преимуществ. Во-первых, теперь команде разработчиков Yii проще поддерживать код, связанный с условиями. Это уже позволило добавить новое условие BetweenColumnsCondition, которое собирает SQL вроде 15 BETWEEN min_age AND max_age. К релизу 2.1, скорее всего, добавится поддержка новых типов условий. Во-вторых, теперь вы можете удобно создавать свои классы условий и использовать их в ваших проектах.\r\n</p>\r\n\r\n<p>\r\nUpsert\r\n</p>\r\n\r\n\r\n<p>\r\nЕщё одним существенным улучшением слоя работы с базами данных стала поддержка UPSERT — атомарной операции, которая создаёт новые записи, если они ещё не существуют (проверяется уникальный ключ), или изменяет существующие записи.\r\n</p>\r\n\r\n<p>\r\nБольше в <a href=\"https://habrahabr.ru/post/349408/\">источнике</a>\r\n</p>\r\n', '1.png', 2, 673, '2018-02-13'),
(2, 'Student Insider: новости из замочной скважины', 'Если отмотать пленку лет на -надцать назад (в некоторых случаях цифра меньше, в некоторых больше, но суть не в этом), то мы вспомним, как когда-то на пороге университета, или уже сидя на лекции, нам очень хотелось поскорее начать работать. Мы ждали знака, куда направить силы, чтобы преуспеть, или не ждали, а задавали вопросы тем, кто немного опытнее. А что, если бы тогда кто-то предложил нам на минутку, а то и на несколько часов, заглянуть в замочную скважину и увидеть себя в будущем? Возможно, даже встретить своих коллег. По сути, это и есть – Student Insider.\r\n\r\nПервая студенческая конференция EPAM собрала в одном зале больше 130 человек, небезразличных к своей будущей профессии. Приглашали в основном студентов второго и третьего курсов, ведь у этой аудитории уже достаточно знаний. Для тех, кто не успел зарегистрироваться или просто не смог прийти на конференцию, велась прямая трансляция. \r\n\r\nОльга Федоринчик, Senior Marketing Specialist EPAM: \r\nimage «Со стороны студентов был очень большой спрос. Даже пришлось закрыть регистрацию на неделю раньше, чем мы планировали. Это говорит о том, что мероприятий, ориентированных на студенческую аудиторию, недостаточно. И это наталкивает на мысль, что стоит развивать студенческое коммьюнити, а такие ивенты – это часть глобальной работы. Мы создаем площадку не только для обмена знаниями «старших и младших» в профессии, но и для общения студентов между собой. На конференции агенду составили таким образом, чтобы студенты узнали и о возможностях развития в production, и о том, что у нас много non prod направлений. Например, проекты для медиков, о которых рассказал Иван Зацепин, наше волонтерство в IT в докладе Марии Брянцевой и Инны Ефимчук… В волонтерских проектах можно участвовать, не будучи сотрудником компании».\r\n\r\nОткрытость и готовность делиться знаниями – характерная черта этой конференции. Опыт EPAM включает экспертизу 25 тысяч коллег по всему миру, именно поэтому спикеры рассказывали о реальных кейсах из практики и отвечали на все, даже самые каверзные вопросы. Например, что лучше .Net или Java.\r\n\r\nОтвет пришлось искать Александру Шадуро, который выступал с докладом «.Net – это модно!».\r\n\r\nАлександр Шадуро, Lead Resource Development Lab Head EPAM:\r\nimage«Мой доклад стоит посмотреть тем, кто сейчас находится в процессе выбора технологии или фреймворка, с которым они планируют связать карьеру. Есть множество статей на эту тему, но как правило обсуждение заканчивается холиваром. Основные фавориты для корпоративной разработки – это, безусловно, .NET и JAVA. Конечно же, никто не сбрасывает со счета С, С++, Ruby on Rails или PHP, но у них достаточно узкая ниша. А люди все-таки хотят не только стабильности, но и хотят быть уверенными, что технология будет дальше развиваться, и они вместе с ней. Примером может быть Azure или .NET Core от Microsoft. Я думаю, что Java со своим консерватизмом проигрывает эволюции .Net. Наша «темная сторона» (а для меня в «Звездных войнах» рулят все-таки темные силы) хоть и более непредсказуема, но более драйвовая. Я хотел рассказать и показать, что .NET намного шире и интереснее, чем принято считать, и надеюсь, что мне это отчасти удалось».\r\n\r\nДля ответа на уже привычный вопрос «Как войти в IT» на конференции организовали панельную дискуссию, где коллеги по сфере, но не по экспертизе, рассказывали каждый свою историю. Самый «юный» айтишник этой беседы, Ольга Чаусова, в EPAM полгода. Она прошла через лабораторию и сейчас работает в компании тестировщиком. Самый матерый в этом диалоге, Никита Сысков, отпраздновал в сфере 11 лет. «Секрет в том, что никакого успеха нет», — с этих слов началось выступление, — «Секрет в том, чтобы добиваться успеха каждый день снова и снова, постоянно расти и развиваться». Каждый из спикеров рассказал свою историю: Максим Борисов – о том, как стал UX-дизайнером, Юрий Семенов – о пути в бизнес-аналитику, а Вадим Анисимов о том, как пришел из торговли в IT и ни разу не пожалел. В этой дискуссии большую часть времени отдали под Q&A сессию.\r\n\r\nЕще один доклад Виталий посвятил хайповой теме блокчейна. С приходом криптовалют мы ожидали увидеть цифровую экономику с ее бонусами в действии и появление смарт-контрактов. А получили множество нерешенных вопросов, ответы на которые весь мир ищет уже 10 лет. \r\n\r\nЧтобы столько же времени не потратить на поиск ответа на извечное «кем я хочу быть», Student Insider точно стоило посетить. Живое общение с теми, кто прошел по этому пути несколько лет назад, точно поможет тем, кто ищет, найти. Ну и, согласитесь, заглянуть в замочную скважину всегда любопытно.\r\n\r\nБольше в источнике: https://habrahabr.ru/company/epam_systems/blog/349270/', '2.png', 2, 954, '2018-02-23'),
(3, 'Throw выражения в C# 7', 'Всем привет. Продолжаем исследовать новые возможности C# 7. Уже были рассмотрены такие темы как: сопоставление с образцом, локальные функции, кортежи. Сегодня поговорим про Throw.\r\n\r\nВ C# throw всегда был оператором. Поскольку throw — это оператор, а не выражение, существуют конструкции в C#, в которых нельзя использовать его.\r\n\r\nв операторе Null-Coalescing (??)\r\nв лямбда выражении\r\nв условном операторе (?:)\r\nв теле выражений (expression-bodied)\r\n\r\nЧтобы исправить данные проблемы, C# 7 вводит выражения throw. Синтаксис остался таким же, как всегда использовался для операторов throw. Единственное различие заключается в том, что теперь их можно использовать в большом количестве случаев.\r\nДавайте рассмотрим, в каких местах throw выражения будет лучше использовать. Поехали!\r\n\r\nТернарные операторы\r\n\r\nДо 7 версии языка C#, использование throw в тернарном операторе запрещалось, так как он был оператором. В новой версии С#, throw используется как выражение, следовательно мы можем добавлять его в тернарный оператор. \r\n\r\nvar customerInfo = HasPermission()\r\n? ReadCustomer()\r\n: throw new SecurityException(\"permission denied\");\r\n\r\nВывод сообщения об ошибке при проверке на null\r\n\r\n«Ссылка на объект не указывает на экземпляр объекта» и «Объект Nullable должен иметь значение», являются двумя наиболее распространенными ошибками в приложениях C#. С помощью выражений throw легче дать более подробное сообщение об ошибке:\r\n\r\n\r\nvar age = user.Age ?? throw new InvalidOperationException(\"user age must be initialized\");\r\n\r\nВывод сообщения об ошибке в методе Single()\r\n\r\nВ процессе борьбы с ошибками проверок на null, в логах можно видеть наиболее распространенное и бесполезное сообщение об ошибке: «Последовательность не содержит элементов». С появлением LINQ, программисты C# часто используют методы Single() и First(), чтобы найти элемент в списке или запросе. Несмотря на то, что эти методы являются краткими, при возникновении ошибки не дают детальной информации о том, какое утверждение было нарушено. \r\n\r\nThrow выражения обеспечивают простой шаблон для добавления полной информации об ошибках без ущерба для краткости:\r\n\r\nvar customer = dbContext.Orders.Where(o => o.Address == address)\r\n                               .Select(o => o.Customer)\r\n                               .Distinct()\r\n                               .SingleOrDefault()\r\n                               ?? throw new InvalidDataException($\"Could not find an order for address \'{address}\'\");\r\n\r\nВывод сообщения об ошибке при конвертации\r\n\r\nВ C# 7 шаблоны типа предлагают новые способы приведения типов. С помощью выражений throw, можно предоставить конкретные сообщения об ошибках:\r\n\r\nvar sequence = arg as IEnumerable\r\n?? throw new ArgumentException(\"Must be a sequence type\", nameof(arg));\r\n\r\nvar invariantString = arg is IConvertible c\r\n    ? c.ToString(CultureInfo.InvariantCulture)\r\n    : throw new ArgumentException($\"Must be a {nameof(IConvertible)} type\", nameof(arg));\r\n\r\nВыражения в теле методов\r\n\r\nThrow выражения предлагают наиболее сжатый способ реализовать метод с выбросом ошибки:\r\n\r\nclass ReadStream : Stream\r\n{\r\n  ...\r\n  override void Write(byte[] buffer, int offset, int count) =>\r\n  throw new NotSupportedException(\"read only\");\r\n  ...\r\n}\r\n\r\nПроверка на Dispose\r\n\r\nХорошо управляемые классы IDisposable бросают ObjectDisposedException на большинство операций после их удаления. Throw выражения могут сделать эти проверки более удобными и менее громоздкими:\r\n\r\nclass DatabaseContext : IDisposable\r\n{\r\n  private SqlConnection connection;\r\n\r\n  private SqlConnection Connection => this.connection\r\n          ?? throw new ObjectDisposedException(nameof(DatabaseContext));\r\n\r\n  public T ReadById(int id)\r\n  {\r\n    this.Connection.Open();\r\n    ...\r\n  }\r\n\r\n  public void Dispose()\r\n  {\r\n    this.connection?.Dispose();\r\n    this.connection = null;\r\n  }\r\n}\r\n\r\nТипичная проверка в конструкторе\r\n\r\n\r\npublic ClientService(\r\nIClientsRepository clientsRepository,\r\nIClientsNotifications clientsNotificator)\r\n{\r\n  if (clientsRepository == null)\r\n  {\r\n    throw new ArgumentNullException(nameof(clientsRepository));\r\n  }\r\n  if (clientsNotificator == null)\r\n  {\r\n    throw new ArgumentNullException(nameof(clientsNotificator));\r\n  }\r\n\r\n  this.clientsRepository = clientsRepository;\r\n  this.clientsNotificator = clientsNotificator;\r\n}\r\n\r\nВсем лень писать столько строчек кода для проверки, теперь, если использовать возможности C# 7, можно написать выражения. Это позволит вам переписать такой код.\r\n\r\npublic ClientService(\r\nIClientsRepository clientsRepository,\r\nIClientsNotifications clientsNotificator)\r\n{\r\n  this.clientsRepository = clientsRepository ?? throw new ArgumentNullException(nameof(clientsRepository));\r\n  this.clientsNotificator = clientsNotificator ?? throw new ArgumentNullException(nameof(clientsNotificator));\r\n}\r\n\r\nТакже следует сказать, что throw выражения можно использовать не только в конструкторе, но и в любом методе.\r\n\r\nЗаключение.\r\n\r\nThrow выражения помогают писать меньший код и использовать исключения в выражениях-членах (expression-bodied). Это всего лишь языковая функция, а не что-то основное в языковой среде исполнения. Хотя throw выражения помогают писать более короткий код, это не серебряная пуля или лекарство от всех болезней. Используйте throw выражения только тогда, когда они могут вам помочь.\r\n\r\nБольше в источнике: https://habrahabr.ru/post/348658/', '3.png', 3, 791, '2018-02-11'),
(4, 'Интервью портала A Cloud Guru с Келси Хайтауэром.', 'В настоящий момент Келси Хайтауэр является Developer Advocate в Google, а также одним из основных контрибьюторов проекта Kubernetes. В IT-сообществе он известен не только вкладом в Kubernetes, но и постоянными докладами на конференциях в США и в Европе. Выступления Келси обычно наполнены множеством забавных шуток и интересными демо-стендами.\r\n\r\n\r\nКелси, ты ведущий эксперт по Kubernetes. Как ты попал в этот проект и что изначально вдохновило тебя на работу с Kubernetes?\r\n\r\n\r\n— Я работал системным администратором в сфере финансов, стартапах, веб-хостингах и даже в нескольких дата-центрах. Я знаком с трудностями управления инфраструктурой, я пережил пики популярности принципа write once, run anywhere, виртуализации, управления конфигурациями и тому подобного задолго до появления контейнеров.\r\n\r\n\r\nКогда я подался в разработчики, мне стало понятно, насколько сложно выкатить код из локальной среды, пытаясь уладить разногласия между инженерами разработки и эксплуатации.\r\nПроходит ещё несколько лет. Я работаю в CoreOS, и на моих глазах Google запускает Kubernetes на DockerCon-2014. К тому моменту у них уже был репозиторий на GitHub, но по факту пользоваться проектом было невозможно, так как не существовало никакой документации.\r\n\r\n\r\nЯ закатал рукава и с головой окунулся в кодовую базу. В конечном итоге я написал «самый первый» пост о том, как установить и изучить Kubernetes на своём ноутбуке. Пост висел в топе на HackerNews —  даже выше, чем пресс-релиз от Google! Вот так CoreOS и нашёл своё место в сообществе Kubernetes.\r\n\r\n\r\nНо в то время CoreOS не проявлял особого интереса к Kubernetes, поэтому я стал контрибьютить по собственной инициативе. По ночам я правил баги, рефакторил тесты, структурировал кодовую базу. Прежде чем начать говорить о Kubernetes на конференциях, я немало сил вложил в его разработку.\r\n\r\n\r\nОн вдохновил меня, потому что действительно решал те проблемы, с которыми я сталкивался раньше. Это было как озарение. Если бы он существовал лет десять назад, то жизнь была бы на порядок лучше. И я видел, какой потенциал есть у Kubernetes: он облегчает людям работу не в будущем, а здесь и сейчас.\r\n\r\n\r\n\r\n\r\nТак каким образом Kubernetes облегчает жизнь прямо сейчас?\r\n\r\n\r\n— За счёт своей согласованности. Kubernetes делает то, что мог бы делать самый лучший системный администратор. С ним становится очень просто выкатывать свой код на нужное окружение.\r\n\r\n\r\nУже три или четыре года назад, ещё до того как в Kubernetes появилась концепция «разделов» (англ. volumes) и всё то, что связано с сетевым стеком, было очевидно его главное достоинство: это развёртывание контейнеров и управление ими.\r\n\r\n\r\nСкажем, у вас есть несколько контейнеров и пул машин. Через несколько строчек конфигурации в Kubernetes вы можете написать: «Запусти этот контейнер». И дальше вы просто наблюдаете, как он запускается. Если вы отключите одну машину, то Kubernetes переместит контейнер на другую. Один только факт, что сегодня не каждый человек так умеет, говорит о продвинутости Kubernetes.\r\n\r\n\r\nИ сейчас, по прошествии этих трёх-четырёх лет Kubernetes по сути поглотил мир контейнеров. Но параллельно появились serverless-технологии и FaaS, которые решают часть тех проблем в управлении инфраструктурой, о которых ты говоришь. Что ты думаешь о FaaS как о концепции?\r\n\r\nСейчас мы видим, как Amazon пытается ещё раз воплотить в жизнь эту идею в Lambda. Они говорят, что могут взять ваш код и просто запустить его в своём облаке, предоставляя множество компонентов, необходимых для приложения, например аутентификацию, базу данных и API-шлюз.\r\n\r\n\r\n\r\n\r\nЕщё Lambda отличается от скриптов CGI моделью расходов. Видишь ли ты в функциональном биллинге что-то, меняющее правила игры?\r\n\r\n\r\n— Я понимаю эту модель расходов как «плати за вызов». И эта концепция проникает во многие облачные ресурсы.\r\n\r\n\r\nЛично я рассматриваю FaaS как окружение разработки в облаке. «Как у облачного провайдера, у меня есть события, очереди сообщений и другие подобные сервисы, которые я предоставляю. Я не собираюсь брать с вас плату за SDK, с помощью которого вы пользуетесь этими сервисами. И поэтому я не хочу создавать высокий порог вхождения, так как нацелен на привлечение как можно большего числа клиентов».\r\n\r\n\r\nТакже можно запускать функции на Kubernetes-кластерах с помощью Kubeless. Видишь ли ты в этом сочетание лучшего из обоих концепций — контейнеров и serverless?\r\n\r\n\r\n— Если ваше окружение состоит из пула виртуальных машин, то нужно проделать достаточно много работы, прежде чем запустить на нём своё приложение. Вам нужно управление конфигурациями и множество подобных инструментов до деплоя.\r\n\r\n\r\nKubernetes поднимает эту планку, предоставляя более гибкие абстракции : вы просто отдаёте ему контейнер, говорите, как именно его нужно запустить  — и вы свободны! Но ему по-прежнему недостаёт некоторых критичных workflow, которые предоставляют serverless-платформы. И если они вам нужны, вы можете наложить их поверх Kubernetes, установив что-то наподобие Kubeless.\r\n\r\nБольше в источнике: https://habrahabr.ru/company/funcorp/blog/349716/', '4.jpeg', 4, 277, '2018-02-23'),
(5, 'Обзор лучших QA-конференций этого года.', 'Я заметил, что многие тестировщики и QA-инженеры почему-то избегают конференций. И напрасно. С одной стороны, есть вы со своими вопросами к сообществу, с другой — есть сообщество, которому интересен ваш опыт. И почему бы эти две стороны не объединить? Именно поэтому я решил поделиться своим мнением относительно предстоящих мероприятий и вдохновить вас на их посещение.\r\n\r\nКакие мероприятия посетить\r\n\r\nВыбрать для посещения интересные международные конференции, посвящённые тестированию, можно с помощью этого обновляемого списка. Для поиска местных мероприятий я рекомендую meetup.com — здесь собрана информация о большом количестве событий в разных странах и городах, на любой вкус. Наконец, очень рекомендую вступить в Slack-сообщество тестировщиков и подписаться на его канал #events. Именно благодаря этой группе я узнал о конференции Romanian Testing, которая пройдёт 9—11 мая 2018 года. Также можно подписаться на профильные подкасты, чтобы прослушивать объявления и отзывы о мероприятиях: например, есть хороший подкаст об автоматизации Джо Колантонио и русскоязычный Radio QA, в котором недавно обсуждалась конференция Selenium Conf.\r\n\r\nВне зависимости от вашего текущего местоположения можно найти мероприятие, до которого вам будет удобно добираться. Я сейчас работаю в Лондоне, поэтому буду искать конференции в Западной Европе. Но в моем списке есть также одно мероприятие в Питере.\r\n\r\nА теперь давайте перейдём к некоторым интересным событиям 2018-го.\r\n\r\nЧто? European Testing Conference\r\nГде? Амстердам (Нидерланды)\r\nКогда? 19—20 февраля\r\nСсылка: europeantestingconference.eu/2018 \r\nИ хотя эта конференция только что закончилась, не могу обойти ее вниманием. \r\n\r\n\r\nВо время выступления\r\n\r\nПризнаюсь, она нравится мне больше всех. В прошлый раз в Хельсинки я был впечатлён тем, как неформальное общение сочетается с выступлениями и практическими сессиями. Я имею в виду, что вы не просто слушаете докладчиков, но и параллельно принимаете активное участие в разных сессиях. Лучше всего конференцию описала Маарет Пьярви, так что я просто поделюсь ссылкой на её пост \"How is European Testing Conference Different?\". Кстати, в её блоге вы найдёте массу полезных советов относительно конференций и тестирования в целом, так что заносите в закладки и постепенно изучайте. \r\n\r\nЧто? UKSTAR\r\nГде? Лондон (Великобритания)\r\nКогда? 12—13 марта\r\nСсылка: ukstar.eurostarsoftwaretesting.com\r\n\r\n\r\nЭта конференция обязательна к посещению, вы не пожалеете ни об одной потраченной копейке. В прошлом году мне не удалось приехать, но я встречался с организаторами и слышал отзывы участников. \r\n\r\nМеня привлекает возможность побывать на двухдневном мероприятии, наполненном общением и выступлениями. Почему бы мне не подготовить и не обсудить материал, который мне действительно интересен? Через несколько дней после того, как я узнал о конференции, я нажал на кнопку «Отправить» и уже через пару недель получил приветственное письмо. \r\n\r\nБудем считать, что вы уже бронируете билеты, так что не пропустите мой доклад об углублённом тестировании и анализе iOS-приложений, я буду выступать во второй день конференции. Натали ван Делфт из комитета UKSTAR отметила: «Мне кажется, получилось идеальное сочетание основных выступлений, мастер-классов и курсов, из которых каждый тестировщик почерпнёт что-то полезное». Мне добавить нечего: приезжайте и посмотрите сами.\r\n\r\nЧто? TestBash\r\nГде и когда?\r\n\r\nБрайтон (Великобритания) | 15—16 марта\r\nУтрехт (Нидерланды) | 12—13 апреля\r\nДублин (Ирландия) | 18 мая\r\n\r\nСсылка: dojo.ministryoftesting.com/events\r\n\r\n\r\nЭто широко известные конференции, проводимые под эгидой Ministry of Testing. Они проходят регулярно в разных странах. В зависимости от места проведения форматы конференций могут различаться, но в целом это одно-/ двухдневные мероприятия, включая саму конференцию и предварительные курсы. Если вкратце, TestBash — это много выступлений на любой вкус, сессии свободного общения и замечательные люди, в том числе признанные «звёзды» европейского и мирового сообщества тестировщиков.\r\n\r\nЧто? Heisenbug\r\nГде? Санкт-Петербург (Россия)\r\nКогда? 17—18 мая\r\nСсылка: heisenbug-piter.ru/en\r\n\r\nВ декабре на конференции Heisenbug было два прекрасных выступления о тестировании в Badoo: «Расширяем возможности автоматизации Calabash-Android» Радждипа Вармы и «Тестирование геолокации в Badoo. Шишки, камни, костыли и селфи-палка» Александра Хози и Николая Козлова.\r\n\r\nСледующая конференция пройдёт в мае, ожидается много технических и практических докладов, которые помогут вам повысить свою продуктивность. Готовьтесь к встрече с искушёнными коллегами, которые не боятся лезть в код, применять нетривиальные инструменты и разрабатывать собственные фреймворки.\r\n\r\nЧто? Nordic Testing Days\r\nГде? Таллин (Эстония)\r\nКогда? 6—8 июня\r\nСсылка: nordictestingdays.eu\r\n\r\n\r\nПрезентационное караоке\r\n\r\nВ прошлом году я был поражён не только выступлениями на тему тестирования (даже сам пытался выступать в формате краткого доклада). Кстати, посмотрите запись \"A Chase of Incremental Improvement\". Мне также очень понравилось «презентационное караоке» (это когда на экран выводятся случайные изображения, а тебе нужно рассказать по ним связную историю) и прочие неформальные мероприятия вечером первого дня официальной программы. \r\n\r\nУпомяну ещё (почти в тему), что как раз в мессенджере официального приложения конференции я увидел объявление об открытии позиции QA в Badoo, которое полностью изменило мою жизнь\r\n\r\nНеоднозначный слайд из доклада про роботов (Таллин, Эстония)\r\n\r\nРекомендую также заблаговременно готовить план действий на конференции. Сверяйтесь с программой, выбирайте интересующие темы или докладчиков и старайтесь грамотно спланировать свой маршрут между залами. Кстати, участие в мастер-классах и обучающих занятиях может требовать выполнения определённых условий вроде наличия ноутбука с дополнительным ПО или каких-то знаний, которыми нужно будет поделиться с другими.\r\n\r\nНекоторые люди на мероприятиях очень стесняются и отказываются общаться и задавать вопросы. И недавно я получил в свои руки, скажем так, «инструмент», позволяющий растопить лёд таких участников — TestSphere, колода карт с заметками о тестировании. Подробнее почитать можно здесь. А я хочу рассказать лишь про один из способов использования этих карт: чтобы начать диалог. Нужно только найти человека во время перерыва, вытащить случайную карту — и вуаля, у вас уже есть тема для разговора. Здесь можно почерпнуть и другие идеи по использованию TestSphere.\r\n\r\nСмело рассказывайте в комментариях о своих любимых конференциях и не забудьте упомянуть, чем именно они вам приглянулись. Увидимся на ближайших мероприятиях!\r\n', '5.jpeg', 5, 1057, '2018-01-03'),
(6, 'Мой поиск работы C# программистом в Нью-Йорке', 'Я безработный! Теперь у меня будет время написать свою статью на Хабр! Эта мысль пришла ко мне значительно раньше страха перед предстоящими собеседованиями. Итак, мой контракт с инвестиционным банком в Нью-Йорке не был продлен, что явилось небольшой неожиданностью для меня. Мне предстояло съездить в давно запланированный отпуск и сразу по возвращению окунуться в процесс прохождения собеседований. После приятных мыслей о том, как много у меня теперь свободного времени на: домашний open source, Arduino и Хабр; стало приходить понимание, что прохождение собеседования — это отдельный навык, которого у меня нет. Я программист со стажем, работаю им со 2-ого курса, начинал с подработки на исследовательский институт, поработал 2 года в разработке игр, потом около 7 лет в компании, занимающейся аутсорсингом. Эта компания перевезла меня в Нью-Йорк и потом отпустила работать в тот самый банк. Последние серьезные собеседования я проходил 8 лет назад! Я постараюсь рассказать вам о том, каким я вижу процесс поиска работы С# WPF программиста в среде инвестиционных компаний Нью-Йорка. Здесь нет никакой морали — это просто моя история.\r\n\r\nЗвонок\r\n\r\nВремя подходит, уже без пяти минут. Музыка выключена, жена спряталась со своим ноутом в спальне, гарнитура подключена к сотовому телефону… Звонок: “Здравствуйте, я хотел бы задать вам пару вопросов по C#...”. “Что? Вот так вот просто, даже не представился? Он будет делать из меня гриль следующие полчаса, а я даже не узнаю как его зовут” — вот, что подумал я после такого начала телефонного интервью.\r\n\r\nПроцесс интервью на позицию программиста в инвестиционные компании обычно состоит из двух этапов: получасовое телефонное интервью и серия личных встреч. Телефонное интервью — это входной фильтр. Грубо говоря, работодатель не хочет тратить свое время на недостойных, поэтому их стараются отсеять на этапе телефонных интервью. Всю организацию интервью на себя взяла агент. Это обычная практика: работодатель сообщает о незакрытых позициях своим авторизованным агентам, а те уже ищут программистов на рынке ну или спамят им через linkedin. В итоге, программист не ведет переговоры напрямую с потенциальными работодателями — это делает агент, начиная с организации собеседований и заканчивая размером компенсации и датой выхода на работу.\r\n\r\nНезнакомец продолжает: “первый вопрос для разминки — чем отличается ref от out?”. А я не знаю. Я программирую на C# 8 лет, и это звучит как простой вопрос, но я действительно не знаю, отличаются ли они. Возможно, это из-за того, что я не пользовался ими. Ну ладно, я лукавлю — я пользовался методом Dictionary.TryGetValue, а там значение возвращается через out параметр. А ref я встречал используя COM из C#. Но мне всегда казалось, что обе эти вещи: возврат значений через параметры и COM — вещи неправильные, архитектурно плохо продуманные и нуждаются в безальтернативном обосновании при их использовании. Я не помню, что я ответил Незнакомцу, но все последующие собеседования я отвечал правильно.', '6.jpeg', 3, 549, '2018-02-07'),
(7, 'Android портирован на C#', 'В разгар битвы между Oracle и Google за право использовать Java/Dalvik в системе Android, компания Xamarin представила альтернативу — более производительную и энергоэффективную версию Android на С#. Тесты производительности говорят сами за себя.\r\n\r\n\r\n\r\nВ отличие от Sun и языка Java, компания Microsoft направила C# и .NET VM для стандартизации в ECMA, система защищена от патентных исков строгими требованиями ISO, а также обязательством Microsoft.\r\n\r\nMono — это open source реализация фреймворка .NET, которая позволяет писать приложения на языке C# для Android и iOS. С момента основания компании Xamarin в июле прошлого года, разработчики Mono думали над её развитием для платформ Android и iOS и над тем, как сделать приложения ещё быстрее и энергоэффективнее. Они пришли к выводу, что проблема — в виртуальной машине Dalvik, которая имеет ряд ограничений, свойственных Java, и поверх неё приложения в любом случае будут работать неэффективно. В итоге появилась идея взять и переписать весь исходный код операционной системы Android на C#. Так появился проект XobotOS.\r\n\r\nАвтоматическую конвертацию более миллиона строк Java-кода Android 2.x провели с помощью улучшенной версии Sharpen.', '7.png', 3, 1425, '2018-02-04');

-- --------------------------------------------------------

--
-- Структура таблицы `article_tags`
--

DROP TABLE IF EXISTS `article_tags`;
CREATE TABLE IF NOT EXISTS `article_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_article_id` (`article_id`),
  KEY `fk_tag_id` (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `article_tags`
--

INSERT INTO `article_tags` (`id`, `article_id`, `tag_id`) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 2, 4),
(5, 4, 4),
(6, 4, 3),
(7, 3, 6),
(8, 3, 2),
(9, 5, 5),
(10, 5, 1),
(11, 7, 13),
(12, 6, 13),
(13, 4, 13),
(14, 2, 13);

-- --------------------------------------------------------

--
-- Структура таблицы `categories`
--

DROP TABLE IF EXISTS `categories`;
CREATE TABLE IF NOT EXISTS `categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `path` varchar(310) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_parent_category` (`parent_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `categories`
--

INSERT INTO `categories` (`id`, `title`, `parent_id`, `path`) VALUES
(1, 'Программирование', NULL, 'coding'),
(2, 'PHP', 1, 'coding/php'),
(3, 'C#', 1, 'coding/csharp'),
(4, 'Сетевые технологии', NULL, 'network_tech'),
(5, 'Маркетинг', NULL, 'marketing');

-- --------------------------------------------------------

--
-- Структура таблицы `comments`
--

DROP TABLE IF EXISTS `comments`;
CREATE TABLE IF NOT EXISTS `comments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `text` varchar(1000) NOT NULL,
  `name` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `pub_date_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `article_id` (`article_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `comments`
--

INSERT INTO `comments` (`id`, `article_id`, `text`, `name`, `email`, `pub_date_time`) VALUES
(1, 1, 'Раньше было лучше', 'Ivan', 'test@mail.com', '2018-02-24 15:29:00'),
(2, 1, 'А по-моему норм', 'Egor', 'test@mail.com', '2018-02-25 10:43:17'),
(3, 1, 'Не знаю, не знаю. Надо пробовать', 'Mars', 'test@mail.com', '2018-02-24 08:45:33'),
(4, 2, 'Гыы)))0)', 'Lexa', 'test@mail.com', '2018-02-25 08:40:00'),
(5, 3, 'Попробую', 'Дима', 'test@mail.com', '2018-02-25 11:47:00'),
(6, 4, 'Кто это?', 'Вася', 'test@mail.com', '2018-02-23 19:29:00'),
(7, 4, 'Много нового', 'Danya', 'test@mail.com', '2018-02-25 03:17:00'),
(8, 5, 'Еще есть EVN в Шанхае', 'Katya', 'test@mail.com', '2018-02-25 23:29:00'),
(9, 6, 'В каком городе лучше жить программисту?', 'Вера', 'test@mail.com', '2018-02-23 08:42:00'),
(10, 7, 'Очень удобно писать кросплатформеры на .NET Core', 'Лена', 'test@mail.com', '2018-02-24 23:29:00'),
(11, 4, 'sdfag', 'asgfas', 'gasgs', '2018-02-26 01:36:33'),
(12, 4, 'asdf', 'asdf', 'asdf', '2018-02-26 01:36:54'),
(13, 4, 'Заработали чтоли????', 'Egoriys', 'saasd@gmail.com', '2018-02-26 01:38:35'),
(14, 4, 'asasas', 'asas', 'asasas', '2018-02-26 02:15:38'),
(15, 2, 'Чек чек', 'Гость', 'guest@gmail.com', '2018-02-26 02:47:11');

-- --------------------------------------------------------

--
-- Дублирующая структура для представления `popular_tags`
-- (See below for the actual view)
--


-- --------------------------------------------------------

--
-- Структура таблицы `tags`
--

DROP TABLE IF EXISTS `tags`;
CREATE TABLE IF NOT EXISTS `tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `tags`
--

INSERT INTO `tags` (`id`, `title`) VALUES
(1, 'Новости'),
(2, 'Обновления'),
(3, 'Звезды'),
(4, 'QA'),
(5, 'Обзор'),
(6, 'Уроки'),
(7, 'Интересное'),
(8, 'youtube'),
(9, 'Факты'),
(10, 'Велосипед'),
(11, 'Мысли'),
(12, 'Лень'),
(13, 'Новое');

-- --------------------------------------------------------

--
-- Структура для представления `popular_tags`
--
DROP TABLE IF EXISTS `popular_tags`;
-- Error reading structure for table smile_blog.popular_tags: #1046 - База данных не выбрана

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `articles`
--
ALTER TABLE `articles`
  ADD CONSTRAINT `fk_category_id` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `article_tags`
--
ALTER TABLE `article_tags`
  ADD CONSTRAINT `fk_article_id` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `fk_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `categories`
--
ALTER TABLE `categories`
  ADD CONSTRAINT `fk_parent_category` FOREIGN KEY (`parent_id`) REFERENCES `categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `comments`
--
ALTER TABLE `comments`
  ADD CONSTRAINT `comments_ibfk_1` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`);
COMMIT;

DROP VIEW IF EXISTS `popular_tags`;
CREATE VIEW popular_tags AS
SELECT last50.tag_id, last50.tag_title, SUM(last50.article_views) as 'total_views'
FROM (
    SELECT 
    t.id as 'tag_id', t.title as 'tag_title', 
    a.id as 'article_id', a.title as 'article_title', 
    a.views  as 'article_views', a.pub_date as 'pub_date' 
    FROM (
        select * from articles
        ORDER BY pub_date DESC
		LIMIT 50
    ) as a
    LEFT JOIN article_tags as atag
	ON a.id = atag.article_id
    LEFT JOIN tags as t
	ON t.id = atag.tag_id
    ) as last50
    
GROUP BY(last50.tag_id)
ORDER BY total_views desc;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
